import java.time.LocalDate

plugins {
  id 'java'
  id 'jacoco'
  id 'pmd'
  id 'com.diffplug.spotless'
  id 'io.freefair.lombok'
}

version = rootProject.version

ext {
  copyrightYear = LocalDate.now().year
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
  testImplementation 'org.hamcrest:hamcrest-core:2.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.compileJava {
  options.encoding = 'UTF-8'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(16)
  }
  modularity.inferModulePath.set(true)
}

tasks {
  processResources {
    filesMatching('**/*.properties') {
      expand([version: version, copyrightYear: copyrightYear])
    }
  }
}

compileTestJava {
  options.encoding = 'UTF-8'
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
    showExceptions = true
    exceptionFormat = 'full'
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn += tasks.test
}

pmd {
  //ignoreFailures = true
  consoleOutput = true
  toolVersion = '6.39.0' // Support für Java 16 ab 6.32, für Java 17 ab 6.37
  rulesMinimumPriority = 2
  ruleSetFiles = files("${rootDir}/config/pmd-ruleset.xml")
}

spotless {
  java {
    googleJavaFormat()
    licenseHeaderFile 'config/LicenseHeader.txt'
  }
}
